# Chapter 1- Summary

## 1조 김영환

## Part 1

### 1️⃣ 데이터, 정보, 지식

1. 데이터(Data):  **관찰의 결과로 나타난 정량적 혹은 정성적인 실제 값**
2. 정보(Information):  **각 데이터에 의미를 부여한 것**
3. 지식(Knowledge): **사물이나 현상에 대한 이해를 말한다.**

따라서 집합 관계는 데이터가 가장 하위 집합이고 정보, 지식 순이다.

### 2️⃣ 일상생활의 데이터베이스

**데이터베이스(Database)**

조직에 필요한 정보를 얻기 위해 논리적으로 연관된 데이터를 모아 구조적으로 통합해 놓은 것이다.

데이터베이스 시스템은 데이터의 **검색(Search)**과 **변경(Modification)** 작업을 주로 수행한다.

-**변경(Modification)**: 시간에 따라 변하는 데이터 값을 반영하기 위해 수행하는 작업.

Ex) 삽입(Insert), 삭제(Delete), 수정(Update)

데이터베이스 구축 난이도는 **검색 빈도**와 **변경 빈도**에 따라 바뀐다.

### 3️⃣ 데이터베이스의 개념 및 특징

데이터베이스는 각 조직에서 사용하던 데이터를 모아서 통합하고, 공유할 목적으로 구축된다.

### 데이터베이스의 개념

1. **통합된 데이터(Integrated data)**
    
    : 데이터를 통합하는 개념으로, 각자 사용하던 데이터의 중복을 최소화하여 중복으로 인한 데이터 불일치 현상을 제거
    
2. **저장된 데이터(Stored data)**
    
    : 문서로 보관된 데이터가 아니라 디스크, 테이프 같은 컴퓨터 저장장치에 저장된 데이터를 의미한다.
    
3. **운영 데이터(Operational data)**
    
    : 조직의 목적을 위해 사용되는 데이터를 의미한다. 즉 업무를 위한 검색을 할 목적으로 저장된 데이터이다.
    
4. **공용 데이터(Shared data)**
    
    : 한 사람 또는 한 업무를 위해 사용되는 데이터가 아니라 공동으로 사용되는 데이터를 의미한다.
    

### 데이터베이스의 특징

1. **실시간 접근성(Real time accessibility)**
    
    : 말 그대로 사용자가 요청을 하는 순간 실제 데이터를 서비스하는 것을 말한다.
    
2. **계속적인 변화(Continuous change)**
    
    :DB에 저장된 데이터는 어느 한 시점의 데이터지만, 데이터 값은 시간에 따라 바뀌므로 DB는 작업으로 인해 바뀐 데이터 값을 저장한다.
    
3. **동시 공유(Concurrent sharing)**
    
    :동시(Concurrent)는 병행이라고도 한다. 즉, DB에 접근하는 사용자 데이터 요청 프로그램이 여러 개 있다는 의미이다.
    
4. **내용에 따른 참조(Reference by content)**
    
    :DB에 저장된 데이터는 물리적 위치가 아니라 데이터 값에 따라 참조하게 된다. 사용자가 특정 데이터를 찾기 위해선 조건을 제시해야 한다. 조건을 제시하면 DB가 알아서 데이터를 검색해 준다. 
    

### 4️⃣ 데이터베이스 시스템의 구성

**DB 시스템**

:각 조직에서 사용하던 데이터를 모아서 통합하고 서로 공유하여 생기는 장점을 이용하는 시스템.

**DBMS**

:사용자와 DB를 연결하는 SW, 주 기억 장치에 상주.

**2.데이터베이스**

:데이터를 모아둔 토대를 말한다. 물리적으론 하드디스크에 저장.

**3.데이터 모델**

: 데이터가 저장되는 기법. 눈에 보이지 않는 논리적인 개념. 데이터가 저장되는 스타일을 나타냄.

## Part 2

1. **파일 시스템**
    
    : **데이터를 파일 단위로 파일 서버에 저장한다.** 각각의 컴퓨터는 **LAN을 통해 파일 서버에 연결**, 파일 서버에 저장된 데이터를 사용하기 위해 각 **컴퓨터의 응용 프로그램에서 열기/닫기 요청.**
    
2. **데이터베이스 시스템**
    
    : **DBMS를 도입하여 데이터를 통합 관리하는 시스템**. DB 시스템은 **클라이언트-서버 시스템**.
    
    **DBMS가 일관성 유지, 복구, 동시 접근 제어 등의 기능을 함**.
    
    DB 시스템은 데이터를 저장하기 전 **설계(Design) 과정**을 거치기 때문에 **데이터의 중복을 줄이고, 데이터를 표준화하며 무결성 유지**. 
    
     
    
    서버(Server): DBMS가 설치되어 데이터를 가진 쪽
    
    클라이언트(Client): 외부에서 요청하는 쪽
    
3. **웹 데이터베이스 시스템**
    
    : DB를 **웹에서 사용할 수 있도록 하는** 시스템. 클라이언트는 웹에 접속한 후 데이터 요청, 웹은 DBMS 서버에 요청 전달. 요청된 데이터는 사용자에게 전달. 
    
    불특정 다수 고객을 상대로 하는 온라인 상거래나 공공 민원 서비스 등에 사용.
    
4. **분산 데이터베이스 시스템**
    
    : 데이터가 발생하는 곳이 여러 곳이면 각각 DB를 운영해야 한다. 반대로 여러 곳에 분산된 DB의 상호 연동이 필요한 경우도 있다. 분산 DB 시스템은 **여러 곳으로 분산 된 DBMS 서버를 연결하여 운영하는 시스템**으로 대규모의 응용 시스템에 사용된다.
    

## Part 3

| 구분 | 파일 시스템 | DBMS |
| --- | --- | --- |
| 데이터 중복 | 데이터를 파일 단위로 저장하므로 중복 가능 | DBMS를 이용하여 데이터를 공유하기 때문에 중복 가능성 낮음 |
| 데이터 일관성 | 데이터의 중복 저장으로 일관성 결여 | 중복 제거로 데이터의 일관성이 유지됨 |
| 데이터 독립성 | 데이터 정의와 프로그램의 독립성 유지 불가능 | 데이터 정의와 프로그램의 독립성 유지 가능 |
| 관리 기능 | 보통 | 데이터 복구,보안, 동시성 제어, 데이터 관리 기능 등을 수행 |
| 프로그램 개발 생산성 | 나쁨 | 짧은 시간에 큰 프로그램을 개발할 수 있음. |
| 데이터 정의 및 저장 | 데이터 정의: 응용 프로그램            데이터 저장: 파일 시스템 | 데이터 정의: DBMS                        데이터 저장: 데이터 베이스 |
| 데이터 접근 방법 | 응용 프로그램이 파일에 직접 접근 | 응용 프로그램이 DBMS에 파일 접근을 요청 |
| 사용 언어 | 자바, C++, C 등  | 자바, C++, C 등과 SQL |
| CPU/주 기억 장치 사용 | 적음 | 많음 |
| 기타 장점 | 보통 | 데이터 무결성 유지, 데이터 표준 준수 용이 |

## Part 4

### 1️⃣ 데이터베이스 언어

데이터베이스 시스템은 데이터베이스 전용 언어인 **SQL(Structured Query Language)** 사용.

SQL은 **데이터 정의어(DDL, Data Definition Language)**, **데이터 조작어(DML, Data Manipulation Language)**와 **데이터 제어어(DCL, Data Control Language)**가 있음.

### 2️⃣ 데이터베이스 사용자

**일반 사용자**

프로그래머가 개발한 **프로그램을 이용해서 데이터베이스에 접근**하는 사용자.

특별한 지식 없이 데이터베이스에 접근해서 데이터의 검색, 삽입 삭제 등 사용.

**자신이 DBMS 사용하는지 모름.**

**응용 프로그래머**

일반 사용자가 사용하는 프로그램을 만드는 사람. 

**SQL 사용자** 

응용 프로그램으로 구현되어 있지 않은 부분을 SQL 사용해 처리.

**데이터베이스 관리자(DBA, Database Administrator)**

데이터베이스 시스템을 **총괄하는 사람**이다.

데이터 설계, 구현, 유지보수의 **전 과정을 담당.**

데이터베이스 사용자 통제, 보안, 성능 모니터링, 데이터 전체 파악 및 관리, 데이터 이동 및 복사 등 제반 업무를 함.

### **3️⃣** DBMS

사용자와 데이터베이스를 연결하는 **소프트웨어.**

### 4️⃣ 데이터 모델

**데이터베이스 시스템에서 데이터를 저장하는 이론적인 방법.**

**어떻게 구조화되어 저장되는지 결정.**

**계층 데이터 모델, 네트워크 데이터 모델, 객체 데이터 모델, 객체-관계 데이터 모델 등 존재.**

**객체-관계 데이터 모델**이 많이 쓰임.

### 5️⃣ 데이터베이스의 개념적 구조

### 3단계 데이터베이스 구조

**외부 단계, 개념 단계, 내부 단계**로 이루어져 있음.

1. **외부단계**
    
    -일반 사용자, 응용 프로그래머가 접근하는 계층.
    
    -**전체 데이터베이스 중에서 하나의 논리적인 부분**을 의미한다.
    
2. **개념 단계**
    
    -전체 데이터베이스의 정의를 의미.
    
    -**통합 조직 별 하나만 존재**.
    
3. **내부 단계**
    
    -**물리적 저장장치에 데이터베이스가 실제로 저장되는 방법**을 ****표현.
    
    -내부 스키마는 한 개.
    
4. **외부/개념 매핑**
    
    -**외부 스키마의 데이터가 개념 스키마의 어느 부분에 해당되는지 대응**.
    
5. **개념/내부 매핑**
    
    -**개념 스키마의 데이터가 내부 스키마의 물리적 장치 어디에 어떤 방법으로 저장되는지 대응**.
    

### 데이터 독립성

1. **논리적 데이터 독립성**
    
    -**외부와 개념 단계 사이의 독립성**. 
    
    -개념 스키마가 변경돼도, 외부 스키마에는 영향을 미치지 않도록 지원.
    
    -**논리적 구조가 변경되어도 응용 프로그램에는 영향이 없도록 하는 개념**.
    
2. **물리적 데이터 독립성**
    
    -**개념과 내부 단계 사이의 독립성.**
    
    -**저장장치 구조 변경**과 ****같이 내부 스키마가 변경되어도 개념 스키마에 영향을 미치지 않도록 지원.